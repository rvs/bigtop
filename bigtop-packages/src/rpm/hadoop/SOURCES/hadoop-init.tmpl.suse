#!/bin/bash
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Starts a Hadoop @HADOOP_DAEMON@
#
# chkconfig: 345 85 15
# description: Hadoop @HADOOP_DAEMON@
#
### BEGIN INIT INFO
# Provides:          hadoop-@HADOOP_DAEMON@
# Required-Start:    $syslog $remote_fs
# Should-Start:
# Required-Stop:     $syslog $remote_fs
# Should-Stop:
# Default-Start:     3 4 5
# Default-Stop:      0 1 2 6
# Short-Description: Hadoop @HADOOP_DAEMON@
### END INIT INFO

source /lib/lsb/init-functions
source /etc/default/hadoop

source @HADOOP_COMMON_ROOT@/bin/hadoop-config.sh 

RETVAL_SUCCESS=0

STATUS_RUNNING=0
STATUS_DEAD=1
STATUS_DEAD_AND_LOCK=2
STATUS_NOT_RUNNING=3


ERROR_PROGRAM_NOT_INSTALLED=5
ERROR_PROGRAM_NOT_CONFIGURED=6


RETVAL=0
EXEC_PATH=@HADOOP_COMMON_ROOT@/bin/hadoop-daemon.sh
CONFIG_PATH="@HADOOP_CONF_DIR@"
HADOOP_PID_DIR=${HADOOP_PID_DIR:-/var/run/hadoop}
PIDFILE="$HADOOP_PID_DIR/hadoop-$HADOOP_IDENT_STRING-@HADOOP_DAEMON@.pid"
LOCKFILE="/var/lock/subsys/hadoop-@HADOOP_DAEMON@"
desc="Hadoop @HADOOP_DAEMON@ daemon"
USER="@HADOOP_DAEMON_USER@"
SLEEP_TIME=5

start() {
  [ -x $exec ] || exit $ERROR_PROGRAM_NOT_INSTALLED
  [ -f $config ] || exit $ERROR_PROGRAM_NOT_CONFIGURED
  log_success_msg "Starting $desc (hadoop-@HADOOP_DAEMON@): "
  start_daemon -u $USER $EXEC_PATH --config "$CONFIG_PATH" start @HADOOP_DAEMON@ $DAEMON_FLAGS
  RETVAL=$?

  if [ "@HADOOP_DAEMON@" = "datanode" ]; then
    # Some processes are slow to start
    sleep $SLEEP_TIME
    checkstatusofproc
    RETVAL=$?
  fi

  [ $RETVAL -eq $RETVAL_SUCCESS ] && touch $LOCKFILE
  return $RETVAL
}

stop() {
  log_success_msg "Stopping $desc (hadoop-@HADOOP_DAEMON@): "
  start_daemon -u $USER $EXEC_PATH --config "$CONFIG_PATH" stop @HADOOP_DAEMON@
  RETVAL=$?

  [ $RETVAL -eq $RETVAL_SUCCESS ] && rm -f $LOCKFILE $PIDFILE

  if [ "@HADOOP_DAEMON@" = "datanode" ]; then
    # Some processes are slow to stop
    sleep $SLEEP_TIME
    checkstatusofproc
    RETVAL=$?

    # Stopping a non running process should be a success
    if [ $RETVAL -eq $STATUS_NOT_RUNNING ]; then
        RETVAL=0
    fi
  fi
}

restart() {
  stop
  start
}


checkstatusofproc(){
  pidofproc -p $PIDFILE java > /dev/null
}

checkstatus(){
  checkstatusofproc
  status=$?

  case "$status" in
    $STATUS_RUNNING)
      log_success_msg "@HADOOP_DAEMON@ is running"
      ;;
    $STATUS_DEAD)
      log_failure_msg "@HADOOP_DAEMON@ is dead and pid file exists"
      ;;
    $STATUS_DEAD_AND_LOCK)
      log_failure_msg "@HADOOP_DAEMON@ is dead and lock file exists"
      ;;
    $STATUS_NOT_RUNNING)
      log_failure_msg "@HADOOP_DAEMON@ is not running"
      ;;
    *)
      log_failure_msg "@HADOOP_DAEMON@ status is unknown"
      ;;
  esac
  return $status
}

condrestart(){
  [ -e $LOCKFILE ] && restart || :
}

check_for_root() {
  if [ $(id -ur) -ne 0 ]; then
    echo 'Error: root user required'
    echo
    exit 1
  fi
}

hadoopservice() {
  case "$1" in
    start)
      check_for_root
      start
      ;;
    stop)
      check_for_root
      stop
      ;;
    status)
      checkstatus
      RETVAL=$?
      ;;
    restart)
      check_for_root
      restart
      ;;
    condrestart|try-restart)
      check_for_root
      condrestart
      ;;
    *)
      if [ "@HADOOP_DAEMON@" = "namenode" ]; then
        if [ "$1" = "upgrade" -o "$1" = "rollback" ]; then
          DAEMON_FLAGS=-$1 $0 start
          RETVAL=$?
        else
          echo $"Usage: $0 {start|stop|status|restart|try-restart|condrestart|upgrade|rollback}"
          exit 1
        fi
      else
        echo $"Usage: $0 {start|stop|status|restart|try-restart|condrestart}"
        exit 1
      fi
  esac
}

hadoopservice "$1"

exit $RETVAL
